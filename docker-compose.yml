
services:
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_DEFAULT_BUCKETS=my-bucket
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      mynet:


  postgres:
    image: postgres:latest
    container_name: mypostgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=mydb
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      mynet:


  pythonapp:
    build:
      context: ./python-files
      dockerfile: Dockerfile
    image: my-python-app:latest
    container_name: pythonapp
    depends_on:
      - minio
      - postgres
    networks:
      - mynet
    env_file:
      - ./.env
    environment:
      - MINIO_CONNECTION_STRING=minio:9000
      - POSTGRES_CONNECTION_STRING=mypostgres:5432
    working_dir: /app
    command: tail -f /dev/null

  airflow:
    image: apache/airflow:2.7.0
    container_name: airflow
    command: standalone
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=${AIRFLOW__DATABASE__SQL_ALCHEMY_CONN}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _AIRFLOW_WWW_USER_CREATE=True
      - _AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME}
      - _AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD}
    volumes:
      - ./airflow-docker/dags:/opt/airflow/dags
      - ./airflow-docker/logs:/opt/airflow/logs
      - ./airflow-docker/plugins:/opt/airflow/plugins
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mynet
    ports:
      - "8080:8080"
    depends_on:
      - postgres

networks:
  mynet:
    driver: bridge

volumes:
  minio_data:
  postgres_data:


